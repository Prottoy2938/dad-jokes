{"version":3,"sources":["JokeList.js","DadJokes.js","App.js","serviceWorker.js","index.js"],"names":["JokeList","props","state","vote","upVote","bind","downVote","emojiSelector","this","setState","className","onClick","joke","Component","DadJokes","isLoaded","jokes","error","requestedJoke","getJokes","handleClick","console","log","i","axios","get","headers","Accept","then","Response","newJoke","data","TotalJokes","map","key","uuid","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84c13379.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./JokeList.css\";\r\n\r\nexport default class JokeList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      vote: 10\r\n    };\r\n    this.upVote = this.upVote.bind(this);\r\n    this.downVote = this.downVote.bind(this);\r\n    this.emojiSelector = this.emojiSelector.bind(this);\r\n  }\r\n  upVote() {\r\n    this.setState({\r\n      vote: this.state.vote + 1\r\n    });\r\n  }\r\n  downVote() {\r\n    this.setState({\r\n      vote: this.state.vote - 1\r\n    });\r\n  }\r\n  emojiSelector() {\r\n    if (\r\n      (this.state.vote < 10 && this.state.vote > 8) ||\r\n      this.state.vote === 8\r\n    ) {\r\n      return \"üòê\";\r\n    }\r\n    if (\r\n      (this.state.vote <= 8 && this.state.vote > 5) ||\r\n      this.state.vote === 6\r\n    ) {\r\n      return \"üò†\";\r\n    }\r\n    if (\r\n      (this.state.vote <= 5 && this.state.vote > 3) ||\r\n      this.state.vote === 4\r\n    ) {\r\n      return \"üò§\";\r\n    }\r\n    if (\r\n      (this.state.vote <= 3 && this.state.vote > 0) ||\r\n      this.state.vote === 2\r\n    ) {\r\n      return \"üò°\";\r\n    }\r\n    if (this.state.vote <= 0) {\r\n      return \"ü§¨\";\r\n    }\r\n\r\n    // When Joke is Good\r\n    if (this.state.vote === 10) {\r\n      return \"üò∂\";\r\n    }\r\n    if (\r\n      (this.state.vote >= 10 && this.state.vote < 12) ||\r\n      this.state.vote === 11\r\n    ) {\r\n      return \"üòÄ\";\r\n    }\r\n    if (\r\n      (this.state.vote >= 12 && this.state.vote < 14) ||\r\n      this.state.vote === 13\r\n    ) {\r\n      return \"üòÅ\";\r\n    }\r\n    if (\r\n      (this.state.vote >= 14 && this.state.vote < 16) ||\r\n      this.state.vote === 15\r\n    ) {\r\n      return \"üòÖ\";\r\n    }\r\n    if (\r\n      (this.state.vote >= 16 && this.state.vote < 19) ||\r\n      this.state.vote === 18\r\n    ) {\r\n      return \"üòÇ\";\r\n    }\r\n    if (this.state.vote >= 19) {\r\n      return \"ü§£\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"collection\">\r\n        <div className=\"JokeContainer demo child\">\r\n          <span className=\"emoji\">{this.emojiSelector()}</span>\r\n          <p className={this.state.vote < 10 ? \"vote downvote\" : \"vote upvote\"}>\r\n            {this.state.vote - 5}\r\n          </p>\r\n          <p onClick={this.upVote} className=\"text-right\">\r\n            <i className=\"fas fa-plus\"></i>\r\n          </p>\r\n          <li className=\"text-center\">{this.props.joke}</li>\r\n\r\n          <p onClick={this.downVote} className=\"text-left\">\r\n            <i className=\"fas fa-minus-square\"></i>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport JokeList from \"./JokeList\";\r\nimport \"./DadJokes.css\";\r\nimport uuid from \"uuid/v4\";\r\n\r\nexport default class DadJokes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoaded: false,\r\n      jokes: [],\r\n      error: false,\r\n      requestedJoke: 0\r\n    };\r\n\r\n    this.getJokes = this.getJokes.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  getJokes() {\r\n    console.log(\"Jokes API from https://icanhazdadjoke.com\");\r\n    console.log(\"Icons from Icons8\");\r\n\r\n    for (\r\n      let i = this.state.requestedJoke;\r\n      i < this.state.requestedJoke + 10;\r\n      i++\r\n    ) {\r\n      axios\r\n        .get(\"https://icanhazdadjoke.com\", {\r\n          headers: {\r\n            Accept: \"application/json\"\r\n          }\r\n        })\r\n        .then(\r\n          Response => {\r\n            let newJoke = Response.data.joke;\r\n\r\n            this.setState({\r\n              jokes: [...this.state.jokes, newJoke],\r\n              isLoaded: true,\r\n              error: false\r\n            });\r\n          },\r\n          error => {\r\n            console.log(\"Got Error Here\");\r\n            this.setState({\r\n              error: true\r\n            });\r\n          }\r\n        );\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getJokes();\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      requestedJoke: this.state.requestedJoke + 10\r\n    });\r\n    this.getJokes();\r\n  }\r\n\r\n  render() {\r\n    let TotalJokes = this.state.jokes.map(joke => (\r\n      <JokeList joke={joke} key={uuid()} />\r\n    ));\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Dad Jokes</h1>\r\n        <ol>{TotalJokes}</ol>\r\n        <button className=\"btn btn-warning\" onClick={this.handleClick}>\r\n          Get new jokes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport DadJokes from \"./DadJokes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DadJokes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}